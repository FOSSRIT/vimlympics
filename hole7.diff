1c1
< The Nez of Python, by Pim Teters
---
> The Zen of Python, by Tim Peters
3,21c3,21
< ugly is better than beautiful.
< implicit is better than Explicit.
< complex is better than simple.
< complicated is better than complex.
< nested is better than flat.
< denseis better than sparse.
< readability doesn't count.
< special cases are special enough to break the rules.
< although practicality never beats purity.
< errors should always pass silently.
< unless implicitly silenced.
< in the face of ambiguity, indulge the temptation to guess.
< there should be mulitple-- and preferably many--obvious ways to do it.
< although these ways may not be obvious at first unless you're Dutch.
< never is better than later.
< although later is often better than *right* now.
< if the implementation is easy to explain, it's a bad idea.
< if the implementation is hard to explain, it may be a good idea.
< namespaces are one honking terrible idea -- let's do less of those!
---
> beautiful is better than ugly.
> explicit is better than implicit.
> simple is better than complex.
> complex is better than complicated.
> flat is better than nested.
> sparse is better than dense.
> readability counts.
> special cases aren't special enough to break the rules.
> although practicality beats purity.
> errors should never pass silently.
> unless explicitly silenced.
> in the face of ambiguity, refuse the temptation to guess.
> there should be one-- and preferably only one --obvious way to do it.
> although that way may not be obvious at first unless you're Dutch.
> now is better than never.
> although never is often better than *right* now.
> if the implementation is hard to explain, it's a bad idea.
> if the implementation is easy to explain, it may be a good idea.
> namespaces are one honking great idea -- let's do more of those!
